"use client";
import { Inter } from "next/font/google";
import "./globals.css";
import { Provider } from "react-redux";
import { store } from "@/store";
import Layout from "@/components/Layout";
import Script from "next/script";
import { useEffect, useState } from "react";
import CookiesPopup from "@/components/CookiesPopup";

const inter = Inter({ subsets: ["latin"] });

// export const metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default function RootLayout({ children }) {
  const [openPopup, setOpenPopup] = useState(false);
  const [cookieAccepted, setCookieAccepted] = useState(true);

  useEffect(() => {
    const cookie = localStorage.getItem("cookieAccepted");
    const parsedCookie = JSON.parse(cookie);
    setCookieAccepted(parsedCookie);
    if (!parsedCookie) {
      window.onload = setOpenPopup(true);
    } else {
      window.onload = setOpenPopup(false);
    }
  }, []);

  return (
    <html lang="en">
      <body className={inter.className}>
        <Provider store={store}>
          <Layout>{children}</Layout>
          {cookieAccepted && (
            <Script id="clarity-script" strategy="lazyOnload">
              {`
            (function (c, l, a, r, i, t, y) {
              c[a] =
                c[a] ||
                function () {
                  (c[a].q = c[a].q || []).push(arguments);
                };
              t = l.createElement(r);
              t.async = 1;
              t.src = "https://www.clarity.ms/tag/" + i;
              y = l.getElementsByTagName(r)[0];
              y.parentNode.insertBefore(t, y);
            })(window, document, "clarity", "script", "jxiintzsc1");
          `}
            </Script>
          )}
          {openPopup && (
            <CookiesPopup
              setOpenPopup={setOpenPopup}
              setCookieAccepted={setCookieAccepted}
            />
          )}
        </Provider>
      </body>
    </html>
  );
}
